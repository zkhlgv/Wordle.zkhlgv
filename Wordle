import logging
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN = "7599599450:AAElkStEzDfM9Y8hLutwtnA7zf55Kk2MrL4"

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
with open("words.txt", "r", encoding="utf-8") as f:
    WORDS = [w.strip().lower() for w in f if len(w.strip()) == 5]

user_games = {}

def choose_word():
    return random.choice(WORDS)

def get_feedback(secret, guess):
    result = []
    for i in range(5):
        if guess[i] == secret[i]:
            result.append("üü©")  # –ë—É–∫–≤–∞ –∏ –º–µ—Å—Ç–æ –≤–µ—Ä–Ω—ã
        elif guess[i] in secret:
            result.append("üü®")  # –ë—É–∫–≤–∞ –µ—Å—Ç—å, –Ω–æ –Ω–µ –Ω–∞ –º–µ—Å—Ç–µ
        else:
            result.append("‚¨õ")  # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –±—É–∫–≤–∞
    return "".join(result)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    word = choose_word()
    user_games[user_id] = {"word": word, "attempts": 0, "history": []}
    print(f"[DEBUG] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} - –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word}")  # –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Wordle! –£–≥–∞–¥–∞–π—Ç–µ —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤. –£ –≤–∞—Å 6 –ø–æ–ø—ã—Ç–æ–∫.")

async def handle_guess(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    guess = update.message.text.lower()

    if user_id not in user_games:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.")
        return

    game = user_games[user_id]

    if len(guess) != 5 or guess not in WORDS:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤.")
        return

    game["attempts"] += 1
    feedback = get_feedback(game["word"], guess)
    game["history"].append(f"{guess.upper()} -> {feedback}")

    if guess == game["word"]:
        await update.message.reply_text(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ –∑–∞ {game['attempts']} –ø–æ–ø—ã—Ç–æ–∫!")
        del user_games[user_id]
    elif game["attempts"] >= 6:
        await update.message.reply_text(f"–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: {game['word'].upper()}")
        del user_games[user_id]
    else:
        await update.message.reply_text("\n".join(game["history"]))

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥—ã:\n/start - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n/help - –ø–æ–º–æ—â—å")

def main():
    logging.basicConfig(level=logging.INFO)
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_guess))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()
